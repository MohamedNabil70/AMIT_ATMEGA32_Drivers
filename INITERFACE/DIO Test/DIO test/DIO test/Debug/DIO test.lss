
DIO test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003d2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000426  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000426  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000458  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000494  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000aa7  00000000  00000000  0000051c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005ff  00000000  00000000  00000fc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005dd  00000000  00000000  000015c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e8  00000000  00000000  00001ba0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003fe  00000000  00000000  00001c88  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004e7  00000000  00000000  00002086  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  0000256d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 74 01 	call	0x2e8	; 0x2e8 <main>
  64:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_SetPinDirection>:


/*Pin Apis*/
void DIO_SetPinDirection(u8 PortId,u8 PinId,u8 PinDirection)
{
if((PortId<=3)&&(PinId<=7)&&((PinDirection== DIO_PIN_INPUT)||(PinDirection==DIO_PIN_OUTPUT)))
  6c:	84 30       	cpi	r24, 0x04	; 4
  6e:	08 f0       	brcs	.+2      	; 0x72 <DIO_SetPinDirection+0x6>
  70:	72 c0       	rjmp	.+228    	; 0x156 <DIO_SetPinDirection+0xea>
  72:	68 30       	cpi	r22, 0x08	; 8
  74:	08 f0       	brcs	.+2      	; 0x78 <DIO_SetPinDirection+0xc>
  76:	6f c0       	rjmp	.+222    	; 0x156 <DIO_SetPinDirection+0xea>
  78:	42 30       	cpi	r20, 0x02	; 2
  7a:	08 f0       	brcs	.+2      	; 0x7e <DIO_SetPinDirection+0x12>
  7c:	6c c0       	rjmp	.+216    	; 0x156 <DIO_SetPinDirection+0xea>
{
switch(PortId)
  7e:	81 30       	cpi	r24, 0x01	; 1
  80:	01 f1       	breq	.+64     	; 0xc2 <DIO_SetPinDirection+0x56>
  82:	30 f0       	brcs	.+12     	; 0x90 <DIO_SetPinDirection+0x24>
  84:	82 30       	cpi	r24, 0x02	; 2
  86:	b1 f1       	breq	.+108    	; 0xf4 <DIO_SetPinDirection+0x88>
  88:	83 30       	cpi	r24, 0x03	; 3
  8a:	09 f4       	brne	.+2      	; 0x8e <DIO_SetPinDirection+0x22>
  8c:	4c c0       	rjmp	.+152    	; 0x126 <DIO_SetPinDirection+0xba>
  8e:	08 95       	ret
{
	case DIO_PORTA:
	if(1==PinDirection)
  90:	41 30       	cpi	r20, 0x01	; 1
  92:	59 f4       	brne	.+22     	; 0xaa <DIO_SetPinDirection+0x3e>
	{
	SET_BIT(DDRA,PinId);	
  94:	2a b3       	in	r18, 0x1a	; 26
  96:	81 e0       	ldi	r24, 0x01	; 1
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	02 c0       	rjmp	.+4      	; 0xa0 <DIO_SetPinDirection+0x34>
  9c:	88 0f       	add	r24, r24
  9e:	99 1f       	adc	r25, r25
  a0:	6a 95       	dec	r22
  a2:	e2 f7       	brpl	.-8      	; 0x9c <DIO_SetPinDirection+0x30>
  a4:	82 2b       	or	r24, r18
  a6:	8a bb       	out	0x1a, r24	; 26
  a8:	08 95       	ret
	}else{
	CLR_BIT(DDRA,PinId);	
  aa:	2a b3       	in	r18, 0x1a	; 26
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	02 c0       	rjmp	.+4      	; 0xb6 <DIO_SetPinDirection+0x4a>
  b2:	88 0f       	add	r24, r24
  b4:	99 1f       	adc	r25, r25
  b6:	6a 95       	dec	r22
  b8:	e2 f7       	brpl	.-8      	; 0xb2 <DIO_SetPinDirection+0x46>
  ba:	80 95       	com	r24
  bc:	82 23       	and	r24, r18
  be:	8a bb       	out	0x1a, r24	; 26
  c0:	08 95       	ret
	}
	break;
	
	case DIO_PORTB:
		if(1==PinDirection)
  c2:	41 30       	cpi	r20, 0x01	; 1
  c4:	59 f4       	brne	.+22     	; 0xdc <DIO_SetPinDirection+0x70>
	{
	SET_BIT(DDRB,PinId);	
  c6:	27 b3       	in	r18, 0x17	; 23
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <DIO_SetPinDirection+0x66>
  ce:	88 0f       	add	r24, r24
  d0:	99 1f       	adc	r25, r25
  d2:	6a 95       	dec	r22
  d4:	e2 f7       	brpl	.-8      	; 0xce <DIO_SetPinDirection+0x62>
  d6:	82 2b       	or	r24, r18
  d8:	87 bb       	out	0x17, r24	; 23
  da:	08 95       	ret
	}else{
	CLR_BIT(DDRB,PinId);	
  dc:	27 b3       	in	r18, 0x17	; 23
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <DIO_SetPinDirection+0x7c>
  e4:	88 0f       	add	r24, r24
  e6:	99 1f       	adc	r25, r25
  e8:	6a 95       	dec	r22
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <DIO_SetPinDirection+0x78>
  ec:	80 95       	com	r24
  ee:	82 23       	and	r24, r18
  f0:	87 bb       	out	0x17, r24	; 23
  f2:	08 95       	ret
	}
	break;
		
	case DIO_PORTC:
			if(1==PinDirection)
  f4:	41 30       	cpi	r20, 0x01	; 1
  f6:	59 f4       	brne	.+22     	; 0x10e <DIO_SetPinDirection+0xa2>
	{
	SET_BIT(DDRC,PinId);	
  f8:	24 b3       	in	r18, 0x14	; 20
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	02 c0       	rjmp	.+4      	; 0x104 <DIO_SetPinDirection+0x98>
 100:	88 0f       	add	r24, r24
 102:	99 1f       	adc	r25, r25
 104:	6a 95       	dec	r22
 106:	e2 f7       	brpl	.-8      	; 0x100 <DIO_SetPinDirection+0x94>
 108:	82 2b       	or	r24, r18
 10a:	84 bb       	out	0x14, r24	; 20
 10c:	08 95       	ret
	}else{
	CLR_BIT(DDRC,PinId);	
 10e:	24 b3       	in	r18, 0x14	; 20
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	02 c0       	rjmp	.+4      	; 0x11a <DIO_SetPinDirection+0xae>
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	6a 95       	dec	r22
 11c:	e2 f7       	brpl	.-8      	; 0x116 <DIO_SetPinDirection+0xaa>
 11e:	80 95       	com	r24
 120:	82 23       	and	r24, r18
 122:	84 bb       	out	0x14, r24	; 20
 124:	08 95       	ret
	}
	break;	
	
	case DIO_PORTD:
			if(1==PinDirection)
 126:	41 30       	cpi	r20, 0x01	; 1
 128:	59 f4       	brne	.+22     	; 0x140 <DIO_SetPinDirection+0xd4>
	{
	SET_BIT(DDRD,PinId);	
 12a:	21 b3       	in	r18, 0x11	; 17
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	02 c0       	rjmp	.+4      	; 0x136 <DIO_SetPinDirection+0xca>
 132:	88 0f       	add	r24, r24
 134:	99 1f       	adc	r25, r25
 136:	6a 95       	dec	r22
 138:	e2 f7       	brpl	.-8      	; 0x132 <DIO_SetPinDirection+0xc6>
 13a:	82 2b       	or	r24, r18
 13c:	81 bb       	out	0x11, r24	; 17
 13e:	08 95       	ret
	}else{
	CLR_BIT(DDRD,PinId);	
 140:	21 b3       	in	r18, 0x11	; 17
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	02 c0       	rjmp	.+4      	; 0x14c <DIO_SetPinDirection+0xe0>
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	6a 95       	dec	r22
 14e:	e2 f7       	brpl	.-8      	; 0x148 <DIO_SetPinDirection+0xdc>
 150:	80 95       	com	r24
 152:	82 23       	and	r24, r18
 154:	81 bb       	out	0x11, r24	; 17
 156:	08 95       	ret

00000158 <DIO_SetPinValue>:
}


void DIO_SetPinValue	(u8 PortId,u8 PinId,u8 PinValue)
{
if((PortId<=3)&&(PinId<=7)&&((PinValue==DIO_PIN_LOW)||(PinValue==DIO_PIN_HIGH)))
 158:	84 30       	cpi	r24, 0x04	; 4
 15a:	08 f0       	brcs	.+2      	; 0x15e <DIO_SetPinValue+0x6>
 15c:	72 c0       	rjmp	.+228    	; 0x242 <DIO_SetPinValue+0xea>
 15e:	68 30       	cpi	r22, 0x08	; 8
 160:	08 f0       	brcs	.+2      	; 0x164 <DIO_SetPinValue+0xc>
 162:	6f c0       	rjmp	.+222    	; 0x242 <DIO_SetPinValue+0xea>
 164:	42 30       	cpi	r20, 0x02	; 2
 166:	08 f0       	brcs	.+2      	; 0x16a <DIO_SetPinValue+0x12>
 168:	6c c0       	rjmp	.+216    	; 0x242 <DIO_SetPinValue+0xea>
{
switch(PortId)
 16a:	81 30       	cpi	r24, 0x01	; 1
 16c:	01 f1       	breq	.+64     	; 0x1ae <DIO_SetPinValue+0x56>
 16e:	30 f0       	brcs	.+12     	; 0x17c <DIO_SetPinValue+0x24>
 170:	82 30       	cpi	r24, 0x02	; 2
 172:	b1 f1       	breq	.+108    	; 0x1e0 <DIO_SetPinValue+0x88>
 174:	83 30       	cpi	r24, 0x03	; 3
 176:	09 f4       	brne	.+2      	; 0x17a <DIO_SetPinValue+0x22>
 178:	4c c0       	rjmp	.+152    	; 0x212 <DIO_SetPinValue+0xba>
 17a:	08 95       	ret
{
	case DIO_PORTA:
	if(DIO_PIN_HIGH==PinValue)
 17c:	41 30       	cpi	r20, 0x01	; 1
 17e:	59 f4       	brne	.+22     	; 0x196 <DIO_SetPinValue+0x3e>
	{
	SET_BIT(PORTA,PinId);	
 180:	2b b3       	in	r18, 0x1b	; 27
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	02 c0       	rjmp	.+4      	; 0x18c <DIO_SetPinValue+0x34>
 188:	88 0f       	add	r24, r24
 18a:	99 1f       	adc	r25, r25
 18c:	6a 95       	dec	r22
 18e:	e2 f7       	brpl	.-8      	; 0x188 <DIO_SetPinValue+0x30>
 190:	82 2b       	or	r24, r18
 192:	8b bb       	out	0x1b, r24	; 27
 194:	08 95       	ret
	}else{
	CLR_BIT(PORTA,PinId);	
 196:	2b b3       	in	r18, 0x1b	; 27
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <DIO_SetPinValue+0x4a>
 19e:	88 0f       	add	r24, r24
 1a0:	99 1f       	adc	r25, r25
 1a2:	6a 95       	dec	r22
 1a4:	e2 f7       	brpl	.-8      	; 0x19e <DIO_SetPinValue+0x46>
 1a6:	80 95       	com	r24
 1a8:	82 23       	and	r24, r18
 1aa:	8b bb       	out	0x1b, r24	; 27
 1ac:	08 95       	ret
	}
	break;
	
	case DIO_PORTB:
		if(DIO_PIN_HIGH==PinValue)
 1ae:	41 30       	cpi	r20, 0x01	; 1
 1b0:	59 f4       	brne	.+22     	; 0x1c8 <DIO_SetPinValue+0x70>
	{
	SET_BIT(PORTB,PinId);	
 1b2:	28 b3       	in	r18, 0x18	; 24
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	02 c0       	rjmp	.+4      	; 0x1be <DIO_SetPinValue+0x66>
 1ba:	88 0f       	add	r24, r24
 1bc:	99 1f       	adc	r25, r25
 1be:	6a 95       	dec	r22
 1c0:	e2 f7       	brpl	.-8      	; 0x1ba <DIO_SetPinValue+0x62>
 1c2:	82 2b       	or	r24, r18
 1c4:	88 bb       	out	0x18, r24	; 24
 1c6:	08 95       	ret
	}else{
	CLR_BIT(PORTB,PinId);	
 1c8:	28 b3       	in	r18, 0x18	; 24
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <DIO_SetPinValue+0x7c>
 1d0:	88 0f       	add	r24, r24
 1d2:	99 1f       	adc	r25, r25
 1d4:	6a 95       	dec	r22
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <DIO_SetPinValue+0x78>
 1d8:	80 95       	com	r24
 1da:	82 23       	and	r24, r18
 1dc:	88 bb       	out	0x18, r24	; 24
 1de:	08 95       	ret
	}
	break;
		
	case DIO_PORTC:
			if(DIO_PIN_HIGH==PinValue)
 1e0:	41 30       	cpi	r20, 0x01	; 1
 1e2:	59 f4       	brne	.+22     	; 0x1fa <DIO_SetPinValue+0xa2>
	{
	SET_BIT(PORTC,PinId);	
 1e4:	25 b3       	in	r18, 0x15	; 21
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <DIO_SetPinValue+0x98>
 1ec:	88 0f       	add	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	6a 95       	dec	r22
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <DIO_SetPinValue+0x94>
 1f4:	82 2b       	or	r24, r18
 1f6:	85 bb       	out	0x15, r24	; 21
 1f8:	08 95       	ret
	}else{
	CLR_BIT(PORTC,PinId);	
 1fa:	25 b3       	in	r18, 0x15	; 21
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	02 c0       	rjmp	.+4      	; 0x206 <DIO_SetPinValue+0xae>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	6a 95       	dec	r22
 208:	e2 f7       	brpl	.-8      	; 0x202 <DIO_SetPinValue+0xaa>
 20a:	80 95       	com	r24
 20c:	82 23       	and	r24, r18
 20e:	85 bb       	out	0x15, r24	; 21
 210:	08 95       	ret
	}
	break;	
	
	case DIO_PORTD:
			if(DIO_PIN_HIGH==PinValue)
 212:	41 30       	cpi	r20, 0x01	; 1
 214:	59 f4       	brne	.+22     	; 0x22c <DIO_SetPinValue+0xd4>
	{
	SET_BIT(PORTD,PinId);	
 216:	22 b3       	in	r18, 0x12	; 18
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 c0       	rjmp	.+4      	; 0x222 <DIO_SetPinValue+0xca>
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	6a 95       	dec	r22
 224:	e2 f7       	brpl	.-8      	; 0x21e <DIO_SetPinValue+0xc6>
 226:	82 2b       	or	r24, r18
 228:	82 bb       	out	0x12, r24	; 18
 22a:	08 95       	ret
	}else{
	CLR_BIT(PORTD,PinId);	
 22c:	22 b3       	in	r18, 0x12	; 18
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 c0       	rjmp	.+4      	; 0x238 <DIO_SetPinValue+0xe0>
 234:	88 0f       	add	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	6a 95       	dec	r22
 23a:	e2 f7       	brpl	.-8      	; 0x234 <DIO_SetPinValue+0xdc>
 23c:	80 95       	com	r24
 23e:	82 23       	and	r24, r18
 240:	82 bb       	out	0x12, r24	; 18
 242:	08 95       	ret

00000244 <DIO_GetPinValue>:
}		
}

void DIO_GetPinValue	(u8 PortId,u8 PinId,u8* PinValue)
{
if((PortId<=3)&&(PinId<=7)&&(PinValue != NULL))
 244:	84 30       	cpi	r24, 0x04	; 4
 246:	08 f0       	brcs	.+2      	; 0x24a <DIO_GetPinValue+0x6>
 248:	4e c0       	rjmp	.+156    	; 0x2e6 <DIO_GetPinValue+0xa2>
 24a:	68 30       	cpi	r22, 0x08	; 8
 24c:	08 f0       	brcs	.+2      	; 0x250 <DIO_GetPinValue+0xc>
 24e:	4b c0       	rjmp	.+150    	; 0x2e6 <DIO_GetPinValue+0xa2>
 250:	41 15       	cp	r20, r1
 252:	51 05       	cpc	r21, r1
 254:	09 f4       	brne	.+2      	; 0x258 <DIO_GetPinValue+0x14>
 256:	47 c0       	rjmp	.+142    	; 0x2e6 <DIO_GetPinValue+0xa2>
{
switch(PortId)
 258:	81 30       	cpi	r24, 0x01	; 1
 25a:	b1 f0       	breq	.+44     	; 0x288 <DIO_GetPinValue+0x44>
 25c:	28 f0       	brcs	.+10     	; 0x268 <DIO_GetPinValue+0x24>
 25e:	82 30       	cpi	r24, 0x02	; 2
 260:	19 f1       	breq	.+70     	; 0x2a8 <DIO_GetPinValue+0x64>
 262:	83 30       	cpi	r24, 0x03	; 3
 264:	89 f1       	breq	.+98     	; 0x2c8 <DIO_GetPinValue+0x84>
 266:	08 95       	ret
{
	case DIO_PORTA:
	if(DIO_PIN_HIGH==GET_BIT(PINA,PinId))
 268:	89 b3       	in	r24, 0x19	; 25
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 c0       	rjmp	.+4      	; 0x272 <DIO_GetPinValue+0x2e>
 26e:	95 95       	asr	r25
 270:	87 95       	ror	r24
 272:	6a 95       	dec	r22
 274:	e2 f7       	brpl	.-8      	; 0x26e <DIO_GetPinValue+0x2a>
 276:	80 ff       	sbrs	r24, 0
 278:	04 c0       	rjmp	.+8      	; 0x282 <DIO_GetPinValue+0x3e>
	{
	*PinValue = DIO_PIN_HIGH;
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	fa 01       	movw	r30, r20
 27e:	80 83       	st	Z, r24
 280:	08 95       	ret
	}else{
		*PinValue = DIO_PIN_LOW;
 282:	fa 01       	movw	r30, r20
 284:	10 82       	st	Z, r1
 286:	08 95       	ret
	}
	break;
	
	case DIO_PORTB:
if(DIO_PIN_HIGH==GET_BIT(PINB,PinId))
 288:	86 b3       	in	r24, 0x16	; 22
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	02 c0       	rjmp	.+4      	; 0x292 <DIO_GetPinValue+0x4e>
 28e:	95 95       	asr	r25
 290:	87 95       	ror	r24
 292:	6a 95       	dec	r22
 294:	e2 f7       	brpl	.-8      	; 0x28e <DIO_GetPinValue+0x4a>
 296:	80 ff       	sbrs	r24, 0
 298:	04 c0       	rjmp	.+8      	; 0x2a2 <DIO_GetPinValue+0x5e>
	{
	*PinValue = DIO_PIN_HIGH;
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	fa 01       	movw	r30, r20
 29e:	80 83       	st	Z, r24
 2a0:	08 95       	ret
	}else{
		*PinValue = DIO_PIN_LOW;
 2a2:	fa 01       	movw	r30, r20
 2a4:	10 82       	st	Z, r1
 2a6:	08 95       	ret
	}
	break;
		
	case DIO_PORTC:
if(DIO_PIN_HIGH==GET_BIT(PINC,PinId))
 2a8:	83 b3       	in	r24, 0x13	; 19
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <DIO_GetPinValue+0x6e>
 2ae:	95 95       	asr	r25
 2b0:	87 95       	ror	r24
 2b2:	6a 95       	dec	r22
 2b4:	e2 f7       	brpl	.-8      	; 0x2ae <DIO_GetPinValue+0x6a>
 2b6:	80 ff       	sbrs	r24, 0
 2b8:	04 c0       	rjmp	.+8      	; 0x2c2 <DIO_GetPinValue+0x7e>
	{
	*PinValue = DIO_PIN_HIGH;
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	fa 01       	movw	r30, r20
 2be:	80 83       	st	Z, r24
 2c0:	08 95       	ret
	}else{
		*PinValue = DIO_PIN_LOW;
 2c2:	fa 01       	movw	r30, r20
 2c4:	10 82       	st	Z, r1
 2c6:	08 95       	ret
	}
	break;	
	case DIO_PORTD:
	if(DIO_PIN_HIGH==GET_BIT(PIND,PinId))
 2c8:	80 b3       	in	r24, 0x10	; 16
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <DIO_GetPinValue+0x8e>
 2ce:	95 95       	asr	r25
 2d0:	87 95       	ror	r24
 2d2:	6a 95       	dec	r22
 2d4:	e2 f7       	brpl	.-8      	; 0x2ce <DIO_GetPinValue+0x8a>
 2d6:	80 ff       	sbrs	r24, 0
 2d8:	04 c0       	rjmp	.+8      	; 0x2e2 <DIO_GetPinValue+0x9e>
	{
	*PinValue = DIO_PIN_HIGH;
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	fa 01       	movw	r30, r20
 2de:	80 83       	st	Z, r24
 2e0:	08 95       	ret
	}else{
		*PinValue = DIO_PIN_LOW;
 2e2:	fa 01       	movw	r30, r20
 2e4:	10 82       	st	Z, r1
 2e6:	08 95       	ret

000002e8 <main>:
/* MCAL */
#include "DIO_interface.h"


int main(void)
{
 2e8:	cf 93       	push	r28
 2ea:	df 93       	push	r29
 2ec:	00 d0       	rcall	.+0      	; 0x2ee <main+0x6>
 2ee:	1f 92       	push	r1
 2f0:	cd b7       	in	r28, 0x3d	; 61
 2f2:	de b7       	in	r29, 0x3e	; 62
    DIO_SetPinDirection(DIO_PORTA,DIO_PIN3,DIO_PIN_OUTPUT) ; // BUZ
 2f4:	41 e0       	ldi	r20, 0x01	; 1
 2f6:	63 e0       	ldi	r22, 0x03	; 3
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTC,DIO_PIN2,DIO_PIN_OUTPUT) ; // LED0
 2fe:	41 e0       	ldi	r20, 0x01	; 1
 300:	62 e0       	ldi	r22, 0x02	; 2
 302:	82 e0       	ldi	r24, 0x02	; 2
 304:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTC,DIO_PIN7,DIO_PIN_OUTPUT) ; // LED1
 308:	41 e0       	ldi	r20, 0x01	; 1
 30a:	67 e0       	ldi	r22, 0x07	; 7
 30c:	82 e0       	ldi	r24, 0x02	; 2
 30e:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTD,DIO_PIN3,DIO_PIN_OUTPUT) ; // LED2
 312:	41 e0       	ldi	r20, 0x01	; 1
 314:	63 e0       	ldi	r22, 0x03	; 3
 316:	83 e0       	ldi	r24, 0x03	; 3
 318:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	
	DIO_SetPinDirection(DIO_PORTB,DIO_PIN0,DIO_PIN_INPUT) ; // B0
 31c:	40 e0       	ldi	r20, 0x00	; 0
 31e:	60 e0       	ldi	r22, 0x00	; 0
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTD,DIO_PIN6,DIO_PIN_INPUT) ; // B1
 326:	40 e0       	ldi	r20, 0x00	; 0
 328:	66 e0       	ldi	r22, 0x06	; 6
 32a:	83 e0       	ldi	r24, 0x03	; 3
 32c:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTD,DIO_PIN2,DIO_PIN_INPUT) ; // B2
 330:	40 e0       	ldi	r20, 0x00	; 0
 332:	62 e0       	ldi	r22, 0x02	; 2
 334:	83 e0       	ldi	r24, 0x03	; 3
 336:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_SetPinDirection>
	
	u8 b0_state , b1_state , b2_state ; 

    while (1) 
    {
		DIO_GetPinValue(DIO_PORTB,DIO_PIN0,&b0_state) ;
 33a:	ae 01       	movw	r20, r28
 33c:	4f 5f       	subi	r20, 0xFF	; 255
 33e:	5f 4f       	sbci	r21, 0xFF	; 255
 340:	60 e0       	ldi	r22, 0x00	; 0
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	0e 94 22 01 	call	0x244	; 0x244 <DIO_GetPinValue>
		DIO_GetPinValue(DIO_PORTD,DIO_PIN6,&b1_state) ;
 348:	ae 01       	movw	r20, r28
 34a:	4e 5f       	subi	r20, 0xFE	; 254
 34c:	5f 4f       	sbci	r21, 0xFF	; 255
 34e:	66 e0       	ldi	r22, 0x06	; 6
 350:	83 e0       	ldi	r24, 0x03	; 3
 352:	0e 94 22 01 	call	0x244	; 0x244 <DIO_GetPinValue>
		DIO_GetPinValue(DIO_PORTD,DIO_PIN2,&b2_state) ;
 356:	ae 01       	movw	r20, r28
 358:	4d 5f       	subi	r20, 0xFD	; 253
 35a:	5f 4f       	sbci	r21, 0xFF	; 255
 35c:	62 e0       	ldi	r22, 0x02	; 2
 35e:	83 e0       	ldi	r24, 0x03	; 3
 360:	0e 94 22 01 	call	0x244	; 0x244 <DIO_GetPinValue>
		
		
		        if (DIO_PIN_HIGH==b0_state)
 364:	89 81       	ldd	r24, Y+1	; 0x01
 366:	81 30       	cpi	r24, 0x01	; 1
 368:	31 f4       	brne	.+12     	; 0x376 <main+0x8e>
		        {
			        DIO_SetPinValue(DIO_PORTA,DIO_PIN3,DIO_PIN_HIGH) ;
 36a:	41 e0       	ldi	r20, 0x01	; 1
 36c:	63 e0       	ldi	r22, 0x03	; 3
 36e:	80 e0       	ldi	r24, 0x00	; 0
 370:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SetPinValue>
 374:	05 c0       	rjmp	.+10     	; 0x380 <main+0x98>
		        }
		        else
		        {
			        DIO_SetPinValue(DIO_PORTA,DIO_PIN3,DIO_PIN_LOW)	;
 376:	40 e0       	ldi	r20, 0x00	; 0
 378:	63 e0       	ldi	r22, 0x03	; 3
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SetPinValue>
		        }

		        if (DIO_PIN_HIGH==b1_state)
 380:	8a 81       	ldd	r24, Y+2	; 0x02
 382:	81 30       	cpi	r24, 0x01	; 1
 384:	31 f4       	brne	.+12     	; 0x392 <main+0xaa>
		        {
			        DIO_SetPinValue(DIO_PORTC,DIO_PIN7,DIO_PIN_HIGH) ;
 386:	41 e0       	ldi	r20, 0x01	; 1
 388:	67 e0       	ldi	r22, 0x07	; 7
 38a:	82 e0       	ldi	r24, 0x02	; 2
 38c:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SetPinValue>
 390:	05 c0       	rjmp	.+10     	; 0x39c <main+0xb4>
		        }
		        else
		        {
			        DIO_SetPinValue(DIO_PORTC,DIO_PIN7,DIO_PIN_LOW)	;
 392:	40 e0       	ldi	r20, 0x00	; 0
 394:	67 e0       	ldi	r22, 0x07	; 7
 396:	82 e0       	ldi	r24, 0x02	; 2
 398:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SetPinValue>
		        }
				
		        if (DIO_PIN_HIGH==b2_state)
 39c:	8b 81       	ldd	r24, Y+3	; 0x03
 39e:	81 30       	cpi	r24, 0x01	; 1
 3a0:	59 f4       	brne	.+22     	; 0x3b8 <main+0xd0>
		        {
			        DIO_SetPinValue(DIO_PORTC,DIO_PIN2,DIO_PIN_HIGH) ;
 3a2:	41 e0       	ldi	r20, 0x01	; 1
 3a4:	62 e0       	ldi	r22, 0x02	; 2
 3a6:	82 e0       	ldi	r24, 0x02	; 2
 3a8:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SetPinValue>
					DIO_SetPinValue(DIO_PORTD,DIO_PIN3,DIO_PIN_HIGH) ;
 3ac:	41 e0       	ldi	r20, 0x01	; 1
 3ae:	63 e0       	ldi	r22, 0x03	; 3
 3b0:	83 e0       	ldi	r24, 0x03	; 3
 3b2:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SetPinValue>
 3b6:	c1 cf       	rjmp	.-126    	; 0x33a <main+0x52>
		        }
		        else 
		        {
			        DIO_SetPinValue(DIO_PORTC,DIO_PIN2,DIO_PIN_LOW) ;
 3b8:	40 e0       	ldi	r20, 0x00	; 0
 3ba:	62 e0       	ldi	r22, 0x02	; 2
 3bc:	82 e0       	ldi	r24, 0x02	; 2
 3be:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SetPinValue>
			        DIO_SetPinValue(DIO_PORTD,DIO_PIN3,DIO_PIN_LOW) ;
 3c2:	40 e0       	ldi	r20, 0x00	; 0
 3c4:	63 e0       	ldi	r22, 0x03	; 3
 3c6:	83 e0       	ldi	r24, 0x03	; 3
 3c8:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SetPinValue>
 3cc:	b6 cf       	rjmp	.-148    	; 0x33a <main+0x52>

000003ce <_exit>:
 3ce:	f8 94       	cli

000003d0 <__stop_program>:
 3d0:	ff cf       	rjmp	.-2      	; 0x3d0 <__stop_program>
