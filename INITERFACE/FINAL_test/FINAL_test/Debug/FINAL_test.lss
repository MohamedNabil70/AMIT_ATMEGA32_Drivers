
FINAL_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007f4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000868  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  00800060  00800060  00000868  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000868  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000898  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  000008d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a12  00000000  00000000  00000a2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000969  00000000  00000000  0000243e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d4e  00000000  00000000  00002da7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000298  00000000  00000000  00003af8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000066a  00000000  00000000  00003d90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000dea  00000000  00000000  000043fa  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  000051e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	aa 36       	cpi	r26, 0x6A	; 106
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 9e 03 	call	0x73c	; 0x73c <main>
  74:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <ADC_init>:
  7c:	87 b1       	in	r24, 0x07	; 7
  7e:	80 64       	ori	r24, 0x40	; 64
  80:	87 b9       	out	0x07, r24	; 7
  82:	87 b1       	in	r24, 0x07	; 7
  84:	8f 77       	andi	r24, 0x7F	; 127
  86:	87 b9       	out	0x07, r24	; 7
  88:	87 b1       	in	r24, 0x07	; 7
  8a:	8f 7d       	andi	r24, 0xDF	; 223
  8c:	87 b9       	out	0x07, r24	; 7
  8e:	86 b1       	in	r24, 0x06	; 6
  90:	8f 7d       	andi	r24, 0xDF	; 223
  92:	86 b9       	out	0x06, r24	; 6
  94:	86 b1       	in	r24, 0x06	; 6
  96:	87 7f       	andi	r24, 0xF7	; 247
  98:	86 b9       	out	0x06, r24	; 6
  9a:	86 b1       	in	r24, 0x06	; 6
  9c:	81 60       	ori	r24, 0x01	; 1
  9e:	86 b9       	out	0x06, r24	; 6
  a0:	86 b1       	in	r24, 0x06	; 6
  a2:	82 60       	ori	r24, 0x02	; 2
  a4:	86 b9       	out	0x06, r24	; 6
  a6:	86 b1       	in	r24, 0x06	; 6
  a8:	84 60       	ori	r24, 0x04	; 4
  aa:	86 b9       	out	0x06, r24	; 6
  ac:	86 b1       	in	r24, 0x06	; 6
  ae:	80 68       	ori	r24, 0x80	; 128
  b0:	86 b9       	out	0x06, r24	; 6
  b2:	08 95       	ret

000000b4 <ADC_getDigitalValue>:
  b4:	80 32       	cpi	r24, 0x20	; 32
  b6:	b0 f4       	brcc	.+44     	; 0xe4 <ADC_getDigitalValue+0x30>
  b8:	61 15       	cp	r22, r1
  ba:	71 05       	cpc	r23, r1
  bc:	99 f0       	breq	.+38     	; 0xe4 <ADC_getDigitalValue+0x30>
  be:	97 b1       	in	r25, 0x07	; 7
  c0:	90 7e       	andi	r25, 0xE0	; 224
  c2:	97 b9       	out	0x07, r25	; 7
  c4:	97 b1       	in	r25, 0x07	; 7
  c6:	89 2b       	or	r24, r25
  c8:	87 b9       	out	0x07, r24	; 7
  ca:	86 b1       	in	r24, 0x06	; 6
  cc:	80 64       	ori	r24, 0x40	; 64
  ce:	86 b9       	out	0x06, r24	; 6
  d0:	34 9b       	sbis	0x06, 4	; 6
  d2:	fe cf       	rjmp	.-4      	; 0xd0 <ADC_getDigitalValue+0x1c>
  d4:	86 b1       	in	r24, 0x06	; 6
  d6:	80 61       	ori	r24, 0x10	; 16
  d8:	86 b9       	out	0x06, r24	; 6
  da:	84 b1       	in	r24, 0x04	; 4
  dc:	95 b1       	in	r25, 0x05	; 5
  de:	fb 01       	movw	r30, r22
  e0:	91 83       	std	Z+1, r25	; 0x01
  e2:	80 83       	st	Z, r24
  e4:	08 95       	ret

000000e6 <ADC_getAnalogValue>:
  e6:	0f 93       	push	r16
  e8:	1f 93       	push	r17
  ea:	cf 93       	push	r28
  ec:	df 93       	push	r29
  ee:	00 d0       	rcall	.+0      	; 0xf0 <ADC_getAnalogValue+0xa>
  f0:	cd b7       	in	r28, 0x3d	; 61
  f2:	de b7       	in	r29, 0x3e	; 62
  f4:	8b 01       	movw	r16, r22
  f6:	be 01       	movw	r22, r28
  f8:	6f 5f       	subi	r22, 0xFF	; 255
  fa:	7f 4f       	sbci	r23, 0xFF	; 255
  fc:	0e 94 5a 00 	call	0xb4	; 0xb4 <ADC_getDigitalValue>
 100:	29 81       	ldd	r18, Y+1	; 0x01
 102:	3a 81       	ldd	r19, Y+2	; 0x02
 104:	a8 e8       	ldi	r26, 0x88	; 136
 106:	b3 e1       	ldi	r27, 0x13	; 19
 108:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__umulhisi3>
 10c:	dc 01       	movw	r26, r24
 10e:	cb 01       	movw	r24, r22
 110:	07 2e       	mov	r0, r23
 112:	7a e0       	ldi	r23, 0x0A	; 10
 114:	b6 95       	lsr	r27
 116:	a7 95       	ror	r26
 118:	97 95       	ror	r25
 11a:	87 95       	ror	r24
 11c:	7a 95       	dec	r23
 11e:	d1 f7       	brne	.-12     	; 0x114 <ADC_getAnalogValue+0x2e>
 120:	70 2d       	mov	r23, r0
 122:	f8 01       	movw	r30, r16
 124:	91 83       	std	Z+1, r25	; 0x01
 126:	80 83       	st	Z, r24
 128:	0f 90       	pop	r0
 12a:	0f 90       	pop	r0
 12c:	df 91       	pop	r29
 12e:	cf 91       	pop	r28
 130:	1f 91       	pop	r17
 132:	0f 91       	pop	r16
 134:	08 95       	ret

00000136 <DIO_setPinDirection>:
 136:	84 30       	cpi	r24, 0x04	; 4
 138:	08 f0       	brcs	.+2      	; 0x13c <DIO_setPinDirection+0x6>
 13a:	72 c0       	rjmp	.+228    	; 0x220 <DIO_setPinDirection+0xea>
 13c:	68 30       	cpi	r22, 0x08	; 8
 13e:	08 f0       	brcs	.+2      	; 0x142 <DIO_setPinDirection+0xc>
 140:	6f c0       	rjmp	.+222    	; 0x220 <DIO_setPinDirection+0xea>
 142:	42 30       	cpi	r20, 0x02	; 2
 144:	08 f0       	brcs	.+2      	; 0x148 <DIO_setPinDirection+0x12>
 146:	6c c0       	rjmp	.+216    	; 0x220 <DIO_setPinDirection+0xea>
 148:	81 30       	cpi	r24, 0x01	; 1
 14a:	01 f1       	breq	.+64     	; 0x18c <DIO_setPinDirection+0x56>
 14c:	30 f0       	brcs	.+12     	; 0x15a <DIO_setPinDirection+0x24>
 14e:	82 30       	cpi	r24, 0x02	; 2
 150:	b1 f1       	breq	.+108    	; 0x1be <DIO_setPinDirection+0x88>
 152:	83 30       	cpi	r24, 0x03	; 3
 154:	09 f4       	brne	.+2      	; 0x158 <DIO_setPinDirection+0x22>
 156:	4c c0       	rjmp	.+152    	; 0x1f0 <DIO_setPinDirection+0xba>
 158:	08 95       	ret
 15a:	41 30       	cpi	r20, 0x01	; 1
 15c:	59 f4       	brne	.+22     	; 0x174 <DIO_setPinDirection+0x3e>
 15e:	2a b3       	in	r18, 0x1a	; 26
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	02 c0       	rjmp	.+4      	; 0x16a <DIO_setPinDirection+0x34>
 166:	88 0f       	add	r24, r24
 168:	99 1f       	adc	r25, r25
 16a:	6a 95       	dec	r22
 16c:	e2 f7       	brpl	.-8      	; 0x166 <DIO_setPinDirection+0x30>
 16e:	82 2b       	or	r24, r18
 170:	8a bb       	out	0x1a, r24	; 26
 172:	08 95       	ret
 174:	2a b3       	in	r18, 0x1a	; 26
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	02 c0       	rjmp	.+4      	; 0x180 <DIO_setPinDirection+0x4a>
 17c:	88 0f       	add	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	6a 95       	dec	r22
 182:	e2 f7       	brpl	.-8      	; 0x17c <DIO_setPinDirection+0x46>
 184:	80 95       	com	r24
 186:	82 23       	and	r24, r18
 188:	8a bb       	out	0x1a, r24	; 26
 18a:	08 95       	ret
 18c:	41 30       	cpi	r20, 0x01	; 1
 18e:	59 f4       	brne	.+22     	; 0x1a6 <DIO_setPinDirection+0x70>
 190:	27 b3       	in	r18, 0x17	; 23
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	02 c0       	rjmp	.+4      	; 0x19c <DIO_setPinDirection+0x66>
 198:	88 0f       	add	r24, r24
 19a:	99 1f       	adc	r25, r25
 19c:	6a 95       	dec	r22
 19e:	e2 f7       	brpl	.-8      	; 0x198 <DIO_setPinDirection+0x62>
 1a0:	82 2b       	or	r24, r18
 1a2:	87 bb       	out	0x17, r24	; 23
 1a4:	08 95       	ret
 1a6:	27 b3       	in	r18, 0x17	; 23
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	02 c0       	rjmp	.+4      	; 0x1b2 <DIO_setPinDirection+0x7c>
 1ae:	88 0f       	add	r24, r24
 1b0:	99 1f       	adc	r25, r25
 1b2:	6a 95       	dec	r22
 1b4:	e2 f7       	brpl	.-8      	; 0x1ae <DIO_setPinDirection+0x78>
 1b6:	80 95       	com	r24
 1b8:	82 23       	and	r24, r18
 1ba:	87 bb       	out	0x17, r24	; 23
 1bc:	08 95       	ret
 1be:	41 30       	cpi	r20, 0x01	; 1
 1c0:	59 f4       	brne	.+22     	; 0x1d8 <DIO_setPinDirection+0xa2>
 1c2:	24 b3       	in	r18, 0x14	; 20
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <DIO_setPinDirection+0x98>
 1ca:	88 0f       	add	r24, r24
 1cc:	99 1f       	adc	r25, r25
 1ce:	6a 95       	dec	r22
 1d0:	e2 f7       	brpl	.-8      	; 0x1ca <DIO_setPinDirection+0x94>
 1d2:	82 2b       	or	r24, r18
 1d4:	84 bb       	out	0x14, r24	; 20
 1d6:	08 95       	ret
 1d8:	24 b3       	in	r18, 0x14	; 20
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	02 c0       	rjmp	.+4      	; 0x1e4 <DIO_setPinDirection+0xae>
 1e0:	88 0f       	add	r24, r24
 1e2:	99 1f       	adc	r25, r25
 1e4:	6a 95       	dec	r22
 1e6:	e2 f7       	brpl	.-8      	; 0x1e0 <DIO_setPinDirection+0xaa>
 1e8:	80 95       	com	r24
 1ea:	82 23       	and	r24, r18
 1ec:	84 bb       	out	0x14, r24	; 20
 1ee:	08 95       	ret
 1f0:	41 30       	cpi	r20, 0x01	; 1
 1f2:	59 f4       	brne	.+22     	; 0x20a <DIO_setPinDirection+0xd4>
 1f4:	21 b3       	in	r18, 0x11	; 17
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	02 c0       	rjmp	.+4      	; 0x200 <DIO_setPinDirection+0xca>
 1fc:	88 0f       	add	r24, r24
 1fe:	99 1f       	adc	r25, r25
 200:	6a 95       	dec	r22
 202:	e2 f7       	brpl	.-8      	; 0x1fc <DIO_setPinDirection+0xc6>
 204:	82 2b       	or	r24, r18
 206:	81 bb       	out	0x11, r24	; 17
 208:	08 95       	ret
 20a:	21 b3       	in	r18, 0x11	; 17
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	02 c0       	rjmp	.+4      	; 0x216 <DIO_setPinDirection+0xe0>
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	6a 95       	dec	r22
 218:	e2 f7       	brpl	.-8      	; 0x212 <DIO_setPinDirection+0xdc>
 21a:	80 95       	com	r24
 21c:	82 23       	and	r24, r18
 21e:	81 bb       	out	0x11, r24	; 17
 220:	08 95       	ret

00000222 <DIO_setPinValue>:
 222:	84 30       	cpi	r24, 0x04	; 4
 224:	08 f0       	brcs	.+2      	; 0x228 <DIO_setPinValue+0x6>
 226:	72 c0       	rjmp	.+228    	; 0x30c <DIO_setPinValue+0xea>
 228:	68 30       	cpi	r22, 0x08	; 8
 22a:	08 f0       	brcs	.+2      	; 0x22e <DIO_setPinValue+0xc>
 22c:	6f c0       	rjmp	.+222    	; 0x30c <DIO_setPinValue+0xea>
 22e:	42 30       	cpi	r20, 0x02	; 2
 230:	08 f0       	brcs	.+2      	; 0x234 <DIO_setPinValue+0x12>
 232:	6c c0       	rjmp	.+216    	; 0x30c <DIO_setPinValue+0xea>
 234:	81 30       	cpi	r24, 0x01	; 1
 236:	01 f1       	breq	.+64     	; 0x278 <DIO_setPinValue+0x56>
 238:	30 f0       	brcs	.+12     	; 0x246 <DIO_setPinValue+0x24>
 23a:	82 30       	cpi	r24, 0x02	; 2
 23c:	b1 f1       	breq	.+108    	; 0x2aa <DIO_setPinValue+0x88>
 23e:	83 30       	cpi	r24, 0x03	; 3
 240:	09 f4       	brne	.+2      	; 0x244 <DIO_setPinValue+0x22>
 242:	4c c0       	rjmp	.+152    	; 0x2dc <DIO_setPinValue+0xba>
 244:	08 95       	ret
 246:	41 30       	cpi	r20, 0x01	; 1
 248:	59 f4       	brne	.+22     	; 0x260 <DIO_setPinValue+0x3e>
 24a:	2b b3       	in	r18, 0x1b	; 27
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	02 c0       	rjmp	.+4      	; 0x256 <DIO_setPinValue+0x34>
 252:	88 0f       	add	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	6a 95       	dec	r22
 258:	e2 f7       	brpl	.-8      	; 0x252 <DIO_setPinValue+0x30>
 25a:	82 2b       	or	r24, r18
 25c:	8b bb       	out	0x1b, r24	; 27
 25e:	08 95       	ret
 260:	2b b3       	in	r18, 0x1b	; 27
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	02 c0       	rjmp	.+4      	; 0x26c <DIO_setPinValue+0x4a>
 268:	88 0f       	add	r24, r24
 26a:	99 1f       	adc	r25, r25
 26c:	6a 95       	dec	r22
 26e:	e2 f7       	brpl	.-8      	; 0x268 <DIO_setPinValue+0x46>
 270:	80 95       	com	r24
 272:	82 23       	and	r24, r18
 274:	8b bb       	out	0x1b, r24	; 27
 276:	08 95       	ret
 278:	41 30       	cpi	r20, 0x01	; 1
 27a:	59 f4       	brne	.+22     	; 0x292 <DIO_setPinValue+0x70>
 27c:	28 b3       	in	r18, 0x18	; 24
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	02 c0       	rjmp	.+4      	; 0x288 <DIO_setPinValue+0x66>
 284:	88 0f       	add	r24, r24
 286:	99 1f       	adc	r25, r25
 288:	6a 95       	dec	r22
 28a:	e2 f7       	brpl	.-8      	; 0x284 <DIO_setPinValue+0x62>
 28c:	82 2b       	or	r24, r18
 28e:	88 bb       	out	0x18, r24	; 24
 290:	08 95       	ret
 292:	28 b3       	in	r18, 0x18	; 24
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	02 c0       	rjmp	.+4      	; 0x29e <DIO_setPinValue+0x7c>
 29a:	88 0f       	add	r24, r24
 29c:	99 1f       	adc	r25, r25
 29e:	6a 95       	dec	r22
 2a0:	e2 f7       	brpl	.-8      	; 0x29a <DIO_setPinValue+0x78>
 2a2:	80 95       	com	r24
 2a4:	82 23       	and	r24, r18
 2a6:	88 bb       	out	0x18, r24	; 24
 2a8:	08 95       	ret
 2aa:	41 30       	cpi	r20, 0x01	; 1
 2ac:	59 f4       	brne	.+22     	; 0x2c4 <DIO_setPinValue+0xa2>
 2ae:	25 b3       	in	r18, 0x15	; 21
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	02 c0       	rjmp	.+4      	; 0x2ba <DIO_setPinValue+0x98>
 2b6:	88 0f       	add	r24, r24
 2b8:	99 1f       	adc	r25, r25
 2ba:	6a 95       	dec	r22
 2bc:	e2 f7       	brpl	.-8      	; 0x2b6 <DIO_setPinValue+0x94>
 2be:	82 2b       	or	r24, r18
 2c0:	85 bb       	out	0x15, r24	; 21
 2c2:	08 95       	ret
 2c4:	25 b3       	in	r18, 0x15	; 21
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	02 c0       	rjmp	.+4      	; 0x2d0 <DIO_setPinValue+0xae>
 2cc:	88 0f       	add	r24, r24
 2ce:	99 1f       	adc	r25, r25
 2d0:	6a 95       	dec	r22
 2d2:	e2 f7       	brpl	.-8      	; 0x2cc <DIO_setPinValue+0xaa>
 2d4:	80 95       	com	r24
 2d6:	82 23       	and	r24, r18
 2d8:	85 bb       	out	0x15, r24	; 21
 2da:	08 95       	ret
 2dc:	41 30       	cpi	r20, 0x01	; 1
 2de:	59 f4       	brne	.+22     	; 0x2f6 <DIO_setPinValue+0xd4>
 2e0:	22 b3       	in	r18, 0x12	; 18
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	02 c0       	rjmp	.+4      	; 0x2ec <DIO_setPinValue+0xca>
 2e8:	88 0f       	add	r24, r24
 2ea:	99 1f       	adc	r25, r25
 2ec:	6a 95       	dec	r22
 2ee:	e2 f7       	brpl	.-8      	; 0x2e8 <DIO_setPinValue+0xc6>
 2f0:	82 2b       	or	r24, r18
 2f2:	82 bb       	out	0x12, r24	; 18
 2f4:	08 95       	ret
 2f6:	22 b3       	in	r18, 0x12	; 18
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	02 c0       	rjmp	.+4      	; 0x302 <DIO_setPinValue+0xe0>
 2fe:	88 0f       	add	r24, r24
 300:	99 1f       	adc	r25, r25
 302:	6a 95       	dec	r22
 304:	e2 f7       	brpl	.-8      	; 0x2fe <DIO_setPinValue+0xdc>
 306:	80 95       	com	r24
 308:	82 23       	and	r24, r18
 30a:	82 bb       	out	0x12, r24	; 18
 30c:	08 95       	ret

0000030e <FLEX_init>:
extern u16 analogVal2,analogVal4,analogVal5,analogVal6,analogVal7;

void FLEX_init(void)
{
	// Set Direction
	DIO_setPinDirection(DIO_PORTA,DIO_PIN2,DIO_PIN_INPUT);
 30e:	40 e0       	ldi	r20, 0x00	; 0
 310:	62 e0       	ldi	r22, 0x02	; 2
 312:	80 e0       	ldi	r24, 0x00	; 0
 314:	0e 94 9b 00 	call	0x136	; 0x136 <DIO_setPinDirection>

	DIO_setPinDirection(DIO_PORTA,DIO_PIN4,DIO_PIN_INPUT);
 318:	40 e0       	ldi	r20, 0x00	; 0
 31a:	64 e0       	ldi	r22, 0x04	; 4
 31c:	80 e0       	ldi	r24, 0x00	; 0
 31e:	0e 94 9b 00 	call	0x136	; 0x136 <DIO_setPinDirection>
	DIO_setPinDirection(DIO_PORTA,DIO_PIN5,DIO_PIN_INPUT);
 322:	40 e0       	ldi	r20, 0x00	; 0
 324:	65 e0       	ldi	r22, 0x05	; 5
 326:	80 e0       	ldi	r24, 0x00	; 0
 328:	0e 94 9b 00 	call	0x136	; 0x136 <DIO_setPinDirection>
	DIO_setPinDirection(DIO_PORTA,DIO_PIN6,DIO_PIN_INPUT);
 32c:	40 e0       	ldi	r20, 0x00	; 0
 32e:	66 e0       	ldi	r22, 0x06	; 6
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	0e 94 9b 00 	call	0x136	; 0x136 <DIO_setPinDirection>
	DIO_setPinDirection(DIO_PORTA,DIO_PIN7,DIO_PIN_INPUT);
 336:	40 e0       	ldi	r20, 0x00	; 0
 338:	67 e0       	ldi	r22, 0x07	; 7
 33a:	80 e0       	ldi	r24, 0x00	; 0
 33c:	0e 94 9b 00 	call	0x136	; 0x136 <DIO_setPinDirection>
 340:	08 95       	ret

00000342 <FLEX_getAnalogValue>:
}

void FLEX_getAnalogValue(void)
{
	
		ADC_getAnalogValue(ADC_CHANNEL_2,&analogVal2);
 342:	62 e6       	ldi	r22, 0x62	; 98
 344:	70 e0       	ldi	r23, 0x00	; 0
 346:	82 e0       	ldi	r24, 0x02	; 2
 348:	0e 94 73 00 	call	0xe6	; 0xe6 <ADC_getAnalogValue>
		ADC_getAnalogValue(ADC_CHANNEL_4,&analogVal4);
 34c:	60 e6       	ldi	r22, 0x60	; 96
 34e:	70 e0       	ldi	r23, 0x00	; 0
 350:	84 e0       	ldi	r24, 0x04	; 4
 352:	0e 94 73 00 	call	0xe6	; 0xe6 <ADC_getAnalogValue>
		ADC_getAnalogValue(ADC_CHANNEL_5,&analogVal5);
 356:	68 e6       	ldi	r22, 0x68	; 104
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	85 e0       	ldi	r24, 0x05	; 5
 35c:	0e 94 73 00 	call	0xe6	; 0xe6 <ADC_getAnalogValue>
		ADC_getAnalogValue(ADC_CHANNEL_6,&analogVal6);
 360:	64 e6       	ldi	r22, 0x64	; 100
 362:	70 e0       	ldi	r23, 0x00	; 0
 364:	86 e0       	ldi	r24, 0x06	; 6
 366:	0e 94 73 00 	call	0xe6	; 0xe6 <ADC_getAnalogValue>
		ADC_getAnalogValue(ADC_CHANNEL_7,&analogVal7);
 36a:	66 e6       	ldi	r22, 0x66	; 102
 36c:	70 e0       	ldi	r23, 0x00	; 0
 36e:	87 e0       	ldi	r24, 0x07	; 7
 370:	0e 94 73 00 	call	0xe6	; 0xe6 <ADC_getAnalogValue>
 374:	08 95       	ret

00000376 <FLEX_displyVal>:
}

void FLEX_displyVal(void)
{
	//write: >
	LCD_goToSpecificPosition(LCD_LINE_ONE,0);
 376:	60 e0       	ldi	r22, 0x00	; 0
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	0e 94 8c 03 	call	0x718	; 0x718 <LCD_goToSpecificPosition>
	LCD_sendChar(62);
 37e:	8e e3       	ldi	r24, 0x3E	; 62
 380:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <LCD_sendChar>
	LCD_goToSpecificPosition(LCD_LINE_ONE,6);
 384:	66 e0       	ldi	r22, 0x06	; 6
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	0e 94 8c 03 	call	0x718	; 0x718 <LCD_goToSpecificPosition>
	LCD_sendChar(62);
 38c:	8e e3       	ldi	r24, 0x3E	; 62
 38e:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <LCD_sendChar>
	LCD_goToSpecificPosition(LCD_LINE_ONE,12);
 392:	6c e0       	ldi	r22, 0x0C	; 12
 394:	81 e0       	ldi	r24, 0x01	; 1
 396:	0e 94 8c 03 	call	0x718	; 0x718 <LCD_goToSpecificPosition>
	LCD_sendChar(62);
 39a:	8e e3       	ldi	r24, 0x3E	; 62
 39c:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <LCD_sendChar>

	LCD_goToSpecificPosition(LCD_LINE_TWO,0);
 3a0:	60 e0       	ldi	r22, 0x00	; 0
 3a2:	82 e0       	ldi	r24, 0x02	; 2
 3a4:	0e 94 8c 03 	call	0x718	; 0x718 <LCD_goToSpecificPosition>
	LCD_sendChar(62);
 3a8:	8e e3       	ldi	r24, 0x3E	; 62
 3aa:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <LCD_sendChar>
	LCD_goToSpecificPosition(LCD_LINE_TWO,6);
 3ae:	66 e0       	ldi	r22, 0x06	; 6
 3b0:	82 e0       	ldi	r24, 0x02	; 2
 3b2:	0e 94 8c 03 	call	0x718	; 0x718 <LCD_goToSpecificPosition>
	LCD_sendChar(62);
 3b6:	8e e3       	ldi	r24, 0x3E	; 62
 3b8:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <LCD_sendChar>




	//write digital Values
	LCD_goToSpecificPosition(LCD_LINE_ONE,1);
 3bc:	61 e0       	ldi	r22, 0x01	; 1
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	0e 94 8c 03 	call	0x718	; 0x718 <LCD_goToSpecificPosition>
	LCD_writeNumber(analogVal4);
 3c4:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 3c8:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 3cc:	80 e0       	ldi	r24, 0x00	; 0
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	0e 94 26 03 	call	0x64c	; 0x64c <LCD_writeNumber>
	LCD_goToSpecificPosition(LCD_LINE_ONE,7);
 3d4:	67 e0       	ldi	r22, 0x07	; 7
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	0e 94 8c 03 	call	0x718	; 0x718 <LCD_goToSpecificPosition>
	LCD_writeNumber(analogVal5);
 3dc:	60 91 68 00 	lds	r22, 0x0068	; 0x800068 <analogVal5>
 3e0:	70 91 69 00 	lds	r23, 0x0069	; 0x800069 <analogVal5+0x1>
 3e4:	80 e0       	ldi	r24, 0x00	; 0
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	0e 94 26 03 	call	0x64c	; 0x64c <LCD_writeNumber>
	LCD_goToSpecificPosition(LCD_LINE_ONE,13);
 3ec:	6d e0       	ldi	r22, 0x0D	; 13
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	0e 94 8c 03 	call	0x718	; 0x718 <LCD_goToSpecificPosition>
	LCD_writeNumber(analogVal2);
 3f4:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <analogVal2>
 3f8:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <analogVal2+0x1>
 3fc:	80 e0       	ldi	r24, 0x00	; 0
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	0e 94 26 03 	call	0x64c	; 0x64c <LCD_writeNumber>


	LCD_goToSpecificPosition(LCD_LINE_TWO,1);
 404:	61 e0       	ldi	r22, 0x01	; 1
 406:	82 e0       	ldi	r24, 0x02	; 2
 408:	0e 94 8c 03 	call	0x718	; 0x718 <LCD_goToSpecificPosition>
	LCD_writeNumber(analogVal6);
 40c:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <analogVal6>
 410:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <analogVal6+0x1>
 414:	80 e0       	ldi	r24, 0x00	; 0
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	0e 94 26 03 	call	0x64c	; 0x64c <LCD_writeNumber>
	LCD_goToSpecificPosition(LCD_LINE_TWO,7);
 41c:	67 e0       	ldi	r22, 0x07	; 7
 41e:	82 e0       	ldi	r24, 0x02	; 2
 420:	0e 94 8c 03 	call	0x718	; 0x718 <LCD_goToSpecificPosition>
	LCD_writeNumber(analogVal7);
 424:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <analogVal7>
 428:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <analogVal7+0x1>
 42c:	80 e0       	ldi	r24, 0x00	; 0
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	0e 94 26 03 	call	0x64c	; 0x64c <LCD_writeNumber>


	LCD_goToSpecificPosition(LCD_LINE_TWO,15);
 434:	6f e0       	ldi	r22, 0x0F	; 15
 436:	82 e0       	ldi	r24, 0x02	; 2
 438:	0e 94 8c 03 	call	0x718	; 0x718 <LCD_goToSpecificPosition>
 43c:	08 95       	ret

0000043e <writeHalfPort>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 43e:	cf 93       	push	r28
 440:	c8 2f       	mov	r28, r24
 442:	80 ff       	sbrs	r24, 0
 444:	06 c0       	rjmp	.+12     	; 0x452 <writeHalfPort+0x14>
 446:	41 e0       	ldi	r20, 0x01	; 1
 448:	64 e0       	ldi	r22, 0x04	; 4
 44a:	80 e0       	ldi	r24, 0x00	; 0
 44c:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 450:	05 c0       	rjmp	.+10     	; 0x45c <writeHalfPort+0x1e>
 452:	40 e0       	ldi	r20, 0x00	; 0
 454:	64 e0       	ldi	r22, 0x04	; 4
 456:	80 e0       	ldi	r24, 0x00	; 0
 458:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 45c:	c1 ff       	sbrs	r28, 1
 45e:	06 c0       	rjmp	.+12     	; 0x46c <writeHalfPort+0x2e>
 460:	41 e0       	ldi	r20, 0x01	; 1
 462:	65 e0       	ldi	r22, 0x05	; 5
 464:	80 e0       	ldi	r24, 0x00	; 0
 466:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 46a:	05 c0       	rjmp	.+10     	; 0x476 <writeHalfPort+0x38>
 46c:	40 e0       	ldi	r20, 0x00	; 0
 46e:	65 e0       	ldi	r22, 0x05	; 5
 470:	80 e0       	ldi	r24, 0x00	; 0
 472:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 476:	c2 ff       	sbrs	r28, 2
 478:	06 c0       	rjmp	.+12     	; 0x486 <writeHalfPort+0x48>
 47a:	41 e0       	ldi	r20, 0x01	; 1
 47c:	66 e0       	ldi	r22, 0x06	; 6
 47e:	80 e0       	ldi	r24, 0x00	; 0
 480:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 484:	05 c0       	rjmp	.+10     	; 0x490 <writeHalfPort+0x52>
 486:	40 e0       	ldi	r20, 0x00	; 0
 488:	66 e0       	ldi	r22, 0x06	; 6
 48a:	80 e0       	ldi	r24, 0x00	; 0
 48c:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 490:	c3 ff       	sbrs	r28, 3
 492:	06 c0       	rjmp	.+12     	; 0x4a0 <writeHalfPort+0x62>
 494:	41 e0       	ldi	r20, 0x01	; 1
 496:	67 e0       	ldi	r22, 0x07	; 7
 498:	80 e0       	ldi	r24, 0x00	; 0
 49a:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 49e:	05 c0       	rjmp	.+10     	; 0x4aa <writeHalfPort+0x6c>
 4a0:	40 e0       	ldi	r20, 0x00	; 0
 4a2:	67 e0       	ldi	r22, 0x07	; 7
 4a4:	80 e0       	ldi	r24, 0x00	; 0
 4a6:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 4aa:	cf 91       	pop	r28
 4ac:	08 95       	ret

000004ae <LCD_setPinDirections>:
 4ae:	41 e0       	ldi	r20, 0x01	; 1
 4b0:	64 e0       	ldi	r22, 0x04	; 4
 4b2:	80 e0       	ldi	r24, 0x00	; 0
 4b4:	0e 94 9b 00 	call	0x136	; 0x136 <DIO_setPinDirection>
 4b8:	41 e0       	ldi	r20, 0x01	; 1
 4ba:	65 e0       	ldi	r22, 0x05	; 5
 4bc:	80 e0       	ldi	r24, 0x00	; 0
 4be:	0e 94 9b 00 	call	0x136	; 0x136 <DIO_setPinDirection>
 4c2:	41 e0       	ldi	r20, 0x01	; 1
 4c4:	66 e0       	ldi	r22, 0x06	; 6
 4c6:	80 e0       	ldi	r24, 0x00	; 0
 4c8:	0e 94 9b 00 	call	0x136	; 0x136 <DIO_setPinDirection>
 4cc:	41 e0       	ldi	r20, 0x01	; 1
 4ce:	67 e0       	ldi	r22, 0x07	; 7
 4d0:	80 e0       	ldi	r24, 0x00	; 0
 4d2:	0e 94 9b 00 	call	0x136	; 0x136 <DIO_setPinDirection>
 4d6:	41 e0       	ldi	r20, 0x01	; 1
 4d8:	61 e0       	ldi	r22, 0x01	; 1
 4da:	81 e0       	ldi	r24, 0x01	; 1
 4dc:	0e 94 9b 00 	call	0x136	; 0x136 <DIO_setPinDirection>
 4e0:	41 e0       	ldi	r20, 0x01	; 1
 4e2:	62 e0       	ldi	r22, 0x02	; 2
 4e4:	81 e0       	ldi	r24, 0x01	; 1
 4e6:	0e 94 9b 00 	call	0x136	; 0x136 <DIO_setPinDirection>
 4ea:	41 e0       	ldi	r20, 0x01	; 1
 4ec:	63 e0       	ldi	r22, 0x03	; 3
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	0e 94 9b 00 	call	0x136	; 0x136 <DIO_setPinDirection>
 4f4:	08 95       	ret

000004f6 <LCD_sendCmnd>:
 4f6:	cf 93       	push	r28
 4f8:	c8 2f       	mov	r28, r24
 4fa:	40 e0       	ldi	r20, 0x00	; 0
 4fc:	61 e0       	ldi	r22, 0x01	; 1
 4fe:	81 e0       	ldi	r24, 0x01	; 1
 500:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 504:	40 e0       	ldi	r20, 0x00	; 0
 506:	62 e0       	ldi	r22, 0x02	; 2
 508:	81 e0       	ldi	r24, 0x01	; 1
 50a:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 50e:	8c 2f       	mov	r24, r28
 510:	82 95       	swap	r24
 512:	8f 70       	andi	r24, 0x0F	; 15
 514:	0e 94 1f 02 	call	0x43e	; 0x43e <writeHalfPort>
 518:	41 e0       	ldi	r20, 0x01	; 1
 51a:	63 e0       	ldi	r22, 0x03	; 3
 51c:	81 e0       	ldi	r24, 0x01	; 1
 51e:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 522:	8f e9       	ldi	r24, 0x9F	; 159
 524:	9f e0       	ldi	r25, 0x0F	; 15
 526:	01 97       	sbiw	r24, 0x01	; 1
 528:	f1 f7       	brne	.-4      	; 0x526 <LCD_sendCmnd+0x30>
 52a:	00 c0       	rjmp	.+0      	; 0x52c <LCD_sendCmnd+0x36>
 52c:	00 00       	nop
 52e:	40 e0       	ldi	r20, 0x00	; 0
 530:	63 e0       	ldi	r22, 0x03	; 3
 532:	81 e0       	ldi	r24, 0x01	; 1
 534:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 538:	8c 2f       	mov	r24, r28
 53a:	0e 94 1f 02 	call	0x43e	; 0x43e <writeHalfPort>
 53e:	41 e0       	ldi	r20, 0x01	; 1
 540:	63 e0       	ldi	r22, 0x03	; 3
 542:	81 e0       	ldi	r24, 0x01	; 1
 544:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 548:	8f e9       	ldi	r24, 0x9F	; 159
 54a:	9f e0       	ldi	r25, 0x0F	; 15
 54c:	01 97       	sbiw	r24, 0x01	; 1
 54e:	f1 f7       	brne	.-4      	; 0x54c <LCD_sendCmnd+0x56>
 550:	00 c0       	rjmp	.+0      	; 0x552 <LCD_sendCmnd+0x5c>
 552:	00 00       	nop
 554:	40 e0       	ldi	r20, 0x00	; 0
 556:	63 e0       	ldi	r22, 0x03	; 3
 558:	81 e0       	ldi	r24, 0x01	; 1
 55a:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 55e:	cf 91       	pop	r28
 560:	08 95       	ret

00000562 <LCD_init>:
 562:	2f e7       	ldi	r18, 0x7F	; 127
 564:	85 eb       	ldi	r24, 0xB5	; 181
 566:	91 e0       	ldi	r25, 0x01	; 1
 568:	21 50       	subi	r18, 0x01	; 1
 56a:	80 40       	sbci	r24, 0x00	; 0
 56c:	90 40       	sbci	r25, 0x00	; 0
 56e:	e1 f7       	brne	.-8      	; 0x568 <LCD_init+0x6>
 570:	00 c0       	rjmp	.+0      	; 0x572 <LCD_init+0x10>
 572:	00 00       	nop
 574:	40 e0       	ldi	r20, 0x00	; 0
 576:	61 e0       	ldi	r22, 0x01	; 1
 578:	81 e0       	ldi	r24, 0x01	; 1
 57a:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 57e:	40 e0       	ldi	r20, 0x00	; 0
 580:	62 e0       	ldi	r22, 0x02	; 2
 582:	81 e0       	ldi	r24, 0x01	; 1
 584:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 588:	82 e0       	ldi	r24, 0x02	; 2
 58a:	0e 94 1f 02 	call	0x43e	; 0x43e <writeHalfPort>
 58e:	41 e0       	ldi	r20, 0x01	; 1
 590:	63 e0       	ldi	r22, 0x03	; 3
 592:	81 e0       	ldi	r24, 0x01	; 1
 594:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 598:	8f e9       	ldi	r24, 0x9F	; 159
 59a:	9f e0       	ldi	r25, 0x0F	; 15
 59c:	01 97       	sbiw	r24, 0x01	; 1
 59e:	f1 f7       	brne	.-4      	; 0x59c <LCD_init+0x3a>
 5a0:	00 c0       	rjmp	.+0      	; 0x5a2 <LCD_init+0x40>
 5a2:	00 00       	nop
 5a4:	40 e0       	ldi	r20, 0x00	; 0
 5a6:	63 e0       	ldi	r22, 0x03	; 3
 5a8:	81 e0       	ldi	r24, 0x01	; 1
 5aa:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 5ae:	88 e2       	ldi	r24, 0x28	; 40
 5b0:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <LCD_sendCmnd>
 5b4:	90 ef       	ldi	r25, 0xF0	; 240
 5b6:	9a 95       	dec	r25
 5b8:	f1 f7       	brne	.-4      	; 0x5b6 <LCD_init+0x54>
 5ba:	8f e0       	ldi	r24, 0x0F	; 15
 5bc:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <LCD_sendCmnd>
 5c0:	20 ef       	ldi	r18, 0xF0	; 240
 5c2:	2a 95       	dec	r18
 5c4:	f1 f7       	brne	.-4      	; 0x5c2 <LCD_init+0x60>
 5c6:	81 e0       	ldi	r24, 0x01	; 1
 5c8:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <LCD_sendCmnd>
 5cc:	8f e3       	ldi	r24, 0x3F	; 63
 5ce:	9f e1       	ldi	r25, 0x1F	; 31
 5d0:	01 97       	sbiw	r24, 0x01	; 1
 5d2:	f1 f7       	brne	.-4      	; 0x5d0 <LCD_init+0x6e>
 5d4:	00 c0       	rjmp	.+0      	; 0x5d6 <LCD_init+0x74>
 5d6:	00 00       	nop
 5d8:	86 e0       	ldi	r24, 0x06	; 6
 5da:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <LCD_sendCmnd>
 5de:	08 95       	ret

000005e0 <LCD_sendChar>:
 5e0:	cf 93       	push	r28
 5e2:	c8 2f       	mov	r28, r24
 5e4:	41 e0       	ldi	r20, 0x01	; 1
 5e6:	61 e0       	ldi	r22, 0x01	; 1
 5e8:	81 e0       	ldi	r24, 0x01	; 1
 5ea:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 5ee:	40 e0       	ldi	r20, 0x00	; 0
 5f0:	62 e0       	ldi	r22, 0x02	; 2
 5f2:	81 e0       	ldi	r24, 0x01	; 1
 5f4:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 5f8:	8c 2f       	mov	r24, r28
 5fa:	82 95       	swap	r24
 5fc:	8f 70       	andi	r24, 0x0F	; 15
 5fe:	0e 94 1f 02 	call	0x43e	; 0x43e <writeHalfPort>
 602:	41 e0       	ldi	r20, 0x01	; 1
 604:	63 e0       	ldi	r22, 0x03	; 3
 606:	81 e0       	ldi	r24, 0x01	; 1
 608:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 60c:	8f e9       	ldi	r24, 0x9F	; 159
 60e:	9f e0       	ldi	r25, 0x0F	; 15
 610:	01 97       	sbiw	r24, 0x01	; 1
 612:	f1 f7       	brne	.-4      	; 0x610 <LCD_sendChar+0x30>
 614:	00 c0       	rjmp	.+0      	; 0x616 <LCD_sendChar+0x36>
 616:	00 00       	nop
 618:	40 e0       	ldi	r20, 0x00	; 0
 61a:	63 e0       	ldi	r22, 0x03	; 3
 61c:	81 e0       	ldi	r24, 0x01	; 1
 61e:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 622:	8c 2f       	mov	r24, r28
 624:	0e 94 1f 02 	call	0x43e	; 0x43e <writeHalfPort>
 628:	41 e0       	ldi	r20, 0x01	; 1
 62a:	63 e0       	ldi	r22, 0x03	; 3
 62c:	81 e0       	ldi	r24, 0x01	; 1
 62e:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 632:	8f e9       	ldi	r24, 0x9F	; 159
 634:	9f e0       	ldi	r25, 0x0F	; 15
 636:	01 97       	sbiw	r24, 0x01	; 1
 638:	f1 f7       	brne	.-4      	; 0x636 <LCD_sendChar+0x56>
 63a:	00 c0       	rjmp	.+0      	; 0x63c <LCD_sendChar+0x5c>
 63c:	00 00       	nop
 63e:	40 e0       	ldi	r20, 0x00	; 0
 640:	63 e0       	ldi	r22, 0x03	; 3
 642:	81 e0       	ldi	r24, 0x01	; 1
 644:	0e 94 11 01 	call	0x222	; 0x222 <DIO_setPinValue>
 648:	cf 91       	pop	r28
 64a:	08 95       	ret

0000064c <LCD_writeNumber>:
 64c:	cf 92       	push	r12
 64e:	df 92       	push	r13
 650:	ef 92       	push	r14
 652:	ff 92       	push	r15
 654:	0f 93       	push	r16
 656:	1f 93       	push	r17
 658:	8b 01       	movw	r16, r22
 65a:	9c 01       	movw	r18, r24
 65c:	67 2b       	or	r22, r23
 65e:	68 2b       	or	r22, r24
 660:	69 2b       	or	r22, r25
 662:	49 f5       	brne	.+82     	; 0x6b6 <LCD_writeNumber+0x6a>
 664:	80 e3       	ldi	r24, 0x30	; 48
 666:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <LCD_sendChar>
 66a:	45 c0       	rjmp	.+138    	; 0x6f6 <LCD_writeNumber+0xaa>
 66c:	dc 01       	movw	r26, r24
 66e:	cb 01       	movw	r24, r22
 670:	88 0f       	add	r24, r24
 672:	99 1f       	adc	r25, r25
 674:	aa 1f       	adc	r26, r26
 676:	bb 1f       	adc	r27, r27
 678:	6c 01       	movw	r12, r24
 67a:	7d 01       	movw	r14, r26
 67c:	cc 0c       	add	r12, r12
 67e:	dd 1c       	adc	r13, r13
 680:	ee 1c       	adc	r14, r14
 682:	ff 1c       	adc	r15, r15
 684:	cc 0c       	add	r12, r12
 686:	dd 1c       	adc	r13, r13
 688:	ee 1c       	adc	r14, r14
 68a:	ff 1c       	adc	r15, r15
 68c:	c8 0e       	add	r12, r24
 68e:	d9 1e       	adc	r13, r25
 690:	ea 1e       	adc	r14, r26
 692:	fb 1e       	adc	r15, r27
 694:	c9 01       	movw	r24, r18
 696:	b8 01       	movw	r22, r16
 698:	2a e0       	ldi	r18, 0x0A	; 10
 69a:	30 e0       	ldi	r19, 0x00	; 0
 69c:	40 e0       	ldi	r20, 0x00	; 0
 69e:	50 e0       	ldi	r21, 0x00	; 0
 6a0:	0e 94 c7 03 	call	0x78e	; 0x78e <__udivmodsi4>
 6a4:	6c 0d       	add	r22, r12
 6a6:	7d 1d       	adc	r23, r13
 6a8:	8e 1d       	adc	r24, r14
 6aa:	9f 1d       	adc	r25, r15
 6ac:	02 2f       	mov	r16, r18
 6ae:	13 2f       	mov	r17, r19
 6b0:	24 2f       	mov	r18, r20
 6b2:	35 2f       	mov	r19, r21
 6b4:	04 c0       	rjmp	.+8      	; 0x6be <LCD_writeNumber+0x72>
 6b6:	61 e0       	ldi	r22, 0x01	; 1
 6b8:	70 e0       	ldi	r23, 0x00	; 0
 6ba:	80 e0       	ldi	r24, 0x00	; 0
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	01 15       	cp	r16, r1
 6c0:	11 05       	cpc	r17, r1
 6c2:	21 05       	cpc	r18, r1
 6c4:	31 05       	cpc	r19, r1
 6c6:	91 f6       	brne	.-92     	; 0x66c <LCD_writeNumber+0x20>
 6c8:	2a e0       	ldi	r18, 0x0A	; 10
 6ca:	30 e0       	ldi	r19, 0x00	; 0
 6cc:	40 e0       	ldi	r20, 0x00	; 0
 6ce:	50 e0       	ldi	r21, 0x00	; 0
 6d0:	0e 94 c7 03 	call	0x78e	; 0x78e <__udivmodsi4>
 6d4:	e2 2e       	mov	r14, r18
 6d6:	f3 2e       	mov	r15, r19
 6d8:	04 2f       	mov	r16, r20
 6da:	15 2f       	mov	r17, r21
 6dc:	80 e3       	ldi	r24, 0x30	; 48
 6de:	86 0f       	add	r24, r22
 6e0:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <LCD_sendChar>
 6e4:	6e 2d       	mov	r22, r14
 6e6:	7f 2d       	mov	r23, r15
 6e8:	80 2f       	mov	r24, r16
 6ea:	91 2f       	mov	r25, r17
 6ec:	61 30       	cpi	r22, 0x01	; 1
 6ee:	71 05       	cpc	r23, r1
 6f0:	81 05       	cpc	r24, r1
 6f2:	91 05       	cpc	r25, r1
 6f4:	49 f7       	brne	.-46     	; 0x6c8 <LCD_writeNumber+0x7c>
 6f6:	1f 91       	pop	r17
 6f8:	0f 91       	pop	r16
 6fa:	ff 90       	pop	r15
 6fc:	ef 90       	pop	r14
 6fe:	df 90       	pop	r13
 700:	cf 90       	pop	r12
 702:	08 95       	ret

00000704 <LCD_clear>:
 704:	81 e0       	ldi	r24, 0x01	; 1
 706:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <LCD_sendCmnd>
 70a:	8f e3       	ldi	r24, 0x3F	; 63
 70c:	9f e1       	ldi	r25, 0x1F	; 31
 70e:	01 97       	sbiw	r24, 0x01	; 1
 710:	f1 f7       	brne	.-4      	; 0x70e <LCD_clear+0xa>
 712:	00 c0       	rjmp	.+0      	; 0x714 <LCD_clear+0x10>
 714:	00 00       	nop
 716:	08 95       	ret

00000718 <LCD_goToSpecificPosition>:
	}
}

void LCD_goToSpecificPosition(u8 lineNumber,u8 position)
{
	if(lineNumber == LCD_LINE_ONE)
 718:	81 30       	cpi	r24, 0x01	; 1
 71a:	39 f4       	brne	.+14     	; 0x72a <LCD_goToSpecificPosition+0x12>
	{
	if (position<16)
 71c:	60 31       	cpi	r22, 0x10	; 16
 71e:	68 f4       	brcc	.+26     	; 0x73a <LCD_goToSpecificPosition+0x22>
	{
	LCD_sendCmnd(0x80 + position);	
 720:	80 e8       	ldi	r24, 0x80	; 128
 722:	86 0f       	add	r24, r22
 724:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <LCD_sendCmnd>
 728:	08 95       	ret
	}
		
	}else if (lineNumber == LCD_LINE_TWO){
 72a:	82 30       	cpi	r24, 0x02	; 2
 72c:	31 f4       	brne	.+12     	; 0x73a <LCD_goToSpecificPosition+0x22>
	if (position<16)
 72e:	60 31       	cpi	r22, 0x10	; 16
 730:	20 f4       	brcc	.+8      	; 0x73a <LCD_goToSpecificPosition+0x22>
	{
	LCD_sendCmnd(0xC0 + position);		
 732:	80 ec       	ldi	r24, 0xC0	; 192
 734:	86 0f       	add	r24, r22
 736:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <LCD_sendCmnd>
 73a:	08 95       	ret

0000073c <main>:

u16 analogVal2,analogVal4,analogVal5,analogVal6,analogVal7;

int main(void)
{
LCD_setPinDirections();
 73c:	0e 94 57 02 	call	0x4ae	; 0x4ae <LCD_setPinDirections>
	
	ADC_init();
 740:	0e 94 3e 00 	call	0x7c	; 0x7c <ADC_init>
	LCD_init();
 744:	0e 94 b1 02 	call	0x562	; 0x562 <LCD_init>
 748:	2f ef       	ldi	r18, 0xFF	; 255
 74a:	89 ef       	ldi	r24, 0xF9	; 249
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	21 50       	subi	r18, 0x01	; 1
 750:	80 40       	sbci	r24, 0x00	; 0
 752:	90 40       	sbci	r25, 0x00	; 0
 754:	e1 f7       	brne	.-8      	; 0x74e <main+0x12>
 756:	00 c0       	rjmp	.+0      	; 0x758 <main+0x1c>
 758:	00 00       	nop

	_delay_ms(20);
	
	while (1) 
    {
	FLEX_init();	
 75a:	0e 94 87 01 	call	0x30e	; 0x30e <FLEX_init>
   FLEX_getAnalogValue();
 75e:	0e 94 a1 01 	call	0x342	; 0x342 <FLEX_getAnalogValue>
 762:	8f e3       	ldi	r24, 0x3F	; 63
 764:	9c e9       	ldi	r25, 0x9C	; 156
 766:	01 97       	sbiw	r24, 0x01	; 1
 768:	f1 f7       	brne	.-4      	; 0x766 <main+0x2a>
 76a:	00 c0       	rjmp	.+0      	; 0x76c <main+0x30>
 76c:	00 00       	nop
   _delay_ms(10);
	LCD_setPinDirections(); 
 76e:	0e 94 57 02 	call	0x4ae	; 0x4ae <LCD_setPinDirections>
   FLEX_displyVal();
 772:	0e 94 bb 01 	call	0x376	; 0x376 <FLEX_displyVal>
 776:	9f ef       	ldi	r25, 0xFF	; 255
 778:	27 e8       	ldi	r18, 0x87	; 135
 77a:	83 e1       	ldi	r24, 0x13	; 19
 77c:	91 50       	subi	r25, 0x01	; 1
 77e:	20 40       	sbci	r18, 0x00	; 0
 780:	80 40       	sbci	r24, 0x00	; 0
 782:	e1 f7       	brne	.-8      	; 0x77c <main+0x40>
 784:	00 c0       	rjmp	.+0      	; 0x786 <main+0x4a>
 786:	00 00       	nop


   

   _delay_ms(400);
   LCD_clear();
 788:	0e 94 82 03 	call	0x704	; 0x704 <LCD_clear>
 78c:	e6 cf       	rjmp	.-52     	; 0x75a <main+0x1e>

0000078e <__udivmodsi4>:
 78e:	a1 e2       	ldi	r26, 0x21	; 33
 790:	1a 2e       	mov	r1, r26
 792:	aa 1b       	sub	r26, r26
 794:	bb 1b       	sub	r27, r27
 796:	fd 01       	movw	r30, r26
 798:	0d c0       	rjmp	.+26     	; 0x7b4 <__udivmodsi4_ep>

0000079a <__udivmodsi4_loop>:
 79a:	aa 1f       	adc	r26, r26
 79c:	bb 1f       	adc	r27, r27
 79e:	ee 1f       	adc	r30, r30
 7a0:	ff 1f       	adc	r31, r31
 7a2:	a2 17       	cp	r26, r18
 7a4:	b3 07       	cpc	r27, r19
 7a6:	e4 07       	cpc	r30, r20
 7a8:	f5 07       	cpc	r31, r21
 7aa:	20 f0       	brcs	.+8      	; 0x7b4 <__udivmodsi4_ep>
 7ac:	a2 1b       	sub	r26, r18
 7ae:	b3 0b       	sbc	r27, r19
 7b0:	e4 0b       	sbc	r30, r20
 7b2:	f5 0b       	sbc	r31, r21

000007b4 <__udivmodsi4_ep>:
 7b4:	66 1f       	adc	r22, r22
 7b6:	77 1f       	adc	r23, r23
 7b8:	88 1f       	adc	r24, r24
 7ba:	99 1f       	adc	r25, r25
 7bc:	1a 94       	dec	r1
 7be:	69 f7       	brne	.-38     	; 0x79a <__udivmodsi4_loop>
 7c0:	60 95       	com	r22
 7c2:	70 95       	com	r23
 7c4:	80 95       	com	r24
 7c6:	90 95       	com	r25
 7c8:	9b 01       	movw	r18, r22
 7ca:	ac 01       	movw	r20, r24
 7cc:	bd 01       	movw	r22, r26
 7ce:	cf 01       	movw	r24, r30
 7d0:	08 95       	ret

000007d2 <__umulhisi3>:
 7d2:	a2 9f       	mul	r26, r18
 7d4:	b0 01       	movw	r22, r0
 7d6:	b3 9f       	mul	r27, r19
 7d8:	c0 01       	movw	r24, r0
 7da:	a3 9f       	mul	r26, r19
 7dc:	70 0d       	add	r23, r0
 7de:	81 1d       	adc	r24, r1
 7e0:	11 24       	eor	r1, r1
 7e2:	91 1d       	adc	r25, r1
 7e4:	b2 9f       	mul	r27, r18
 7e6:	70 0d       	add	r23, r0
 7e8:	81 1d       	adc	r24, r1
 7ea:	11 24       	eor	r1, r1
 7ec:	91 1d       	adc	r25, r1
 7ee:	08 95       	ret

000007f0 <_exit>:
 7f0:	f8 94       	cli

000007f2 <__stop_program>:
 7f2:	ff cf       	rjmp	.-2      	; 0x7f2 <__stop_program>
